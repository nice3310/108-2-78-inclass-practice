violatedArticles
violatedArticles<-unique(badEmployers$laF)
violatedArticles<-unique(badEmployers$law)
violatedArticles
levels(badEmployers$law)
levels(badEmployers$law)
levels(badEmployers$law)
violatedArticles<-unique(badEmployers$law)
violatedArticles
factor(badEmployers$law)
levels(badEmployers$law)
levels(badEmployers$law)
levels(badEmployers$law)
factor(badEmployers$law)
levels(badEmployers$law)->la
la
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
levels(badEmployers$law)
levels(factor(badEmployers$law))
violatedArticles<-levels(factor(badEmployers$law))
class(violatedArticles)
violatedArticles
table_countsByArticle<-table(badEmployers$law)
names(table_countsByArticle)
table_countsByArticle
max(badEmployers$law,na.rm = T)
pickmax<-max(table_countsByArticle$law,na.rm = T)
pickmax<-badEmployers$law==max(badEmployers$law)
pickmax
pickmax<-max(table_countsByArticle)
str(pickmax)
pickmax<-table_countsByArticle==max(table_countsByArticle)
str(pickmax)
str(pickmax)
pickmax
mostViolatedArticle<-table_countsByArticle[pickmax]
mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
mostViolatedArticle_content<-badEmployers$lawContent[pickmax]
mostViolatedArticle_content
pickmax2<-badEmployers$law==max(badEmployers$law)
pickmax2<-badEmployers$law==max(badEmployers$law)
pickmax<-table_countsByArticle==max(table_countsByArticle)
mostViolatedArticle<-table_countsByArticle[pickmax]
mostViolatedArticle
pickmax2<-badEmployers$law==max(badEmployers$law)
mostViolatedArticle_content<-badEmployers$lawContent[pickmax2]
mostViolatedArticle_content
pickmax2<-badEmployers$law==max(badEmployers$law)
pickmax2
mostViolatedArticle_content<-badEmployers$lawContent[pickmax]
mostViolatedArticle_content
mostViolatedArticle_content<-badEmployers$lawContent[pickmax]
pickmax
mostViolatedArticle
mostViolatedArticle_content<-badEmployers$lawContent[mostViolatedArticle]
mostViolatedArticle_content
class(mostViolatedArticle_content)
mostViolatedArticle_content
View(badEmployers)
badEmployers$law
levesl(factor(badEmployers$law))
levels(factor(badEmployers$law))
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
str(badEmployers$law)
violatedArticles<-levels(factor(badEmployers$law))
violatedArticles
table_countsByArticle<-table(badEmployers$law)
names(table_countsByArticle)
table_countsByArticle
mostViolatedArticle<-table_countsByArticle[pickmax]
pickmax<-table_countsByArticle==max(table_countsByArticle)
mostViolatedArticle<-table_countsByArticle[pickmax]
mostViolatedArticle
pickmax
tabcontent<-table(badEmployers$lawContent)
tabcontent[pickmax]
table_countsByArticle<-table(badEmployers$law)
table_countsByArticle
badEmployers$law
table(badEmployers$lawContent[pickmax])
table(badEmployers$lawContent)
table(badEmployers$lawContent)
mostViolatedArticle_content<-"延長工作時間超過法令規定"
mostViolatedArticle_content
str(badEmployers)
str(badEmployers$dt)
table(badEmployers$dt)
class(badEmployers$dt)
ymd(badEmployers$dt)
levels(factor(badEmployers$dt))
pickmax<-table_countsByArticle==max(table_countsByArticle)
pickmax
factor(badEmployers$lawContent)
levels(factor(badEmployers$lawContent))
as.integer(levels(factor(badEmployers$lawContent)))
levels(as.integer(factor(badEmployers$lawContent)))
levels(as.integer(factor(badEmployers$lawContent)))
levels(factor(badEmployers$lawContent))->ok
as.integer(ok)
factor(badEmployers$lawContent)->okk
as.integer(okk)
date<-badEmployers$dt
datemonth<-month(date)
datemonth
maxmonth<-datemonth==max(datemonth)
maxmonth
datemonth[maxmonth]
unique(datemonth)
datemonth[maxmonth]->interpopular
unique(interpopular)
unique(interpopular)->inter
as.character(inter)
as.character(inter)->popularSentenceMonth
popularSentenceMonth
class(popularSentenceMonth)
length(popularSentenceMonth)
popularSentenceMonth
table datemonth
table (datemonth)
maxmonth<-datemonth==max(datemonth)
maxmonth
datemonth[maxmonth]->interpopular
interpopular
table (datemonth)->tablemonth
tablemonth
tablemonth==max(tablemonth)->max
tablemonth[max]
tablemonth[max]->popularSentenceMonth
popularSentenceMonth
class(popularSentenceMonth)
as.character((popularSentenceMonth))
names(max)
names(popularSentenceMonth)
tablemonth[max]->popular
names(popular)->popularSentenceMonth
popularSentenceMonth
table(badEmployers$lawContent)->tablecontent
table(badEmployers$lawContent)->tablecontent
tablecontent==max(tablecontent)->maxcontent
maxcontent
tablecontent[maxcontent]->intermax
names(intermax)->mostViolatedArticle_content
mostViolatedArticle_content
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
str(table)
str(namelist)
str(students10)
str(namelist)
str(students10)
chinese<-factor(table$`國文`,order=T)
chinese
chinese<-factor(order(table$`國文`),order=T)
chinese
chinese<-factor(order(table$`國文`))
chinese
chinese<-factor(table$`國文`,levels=c(16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,),oreder=T)
chinese<-factor(table$`國文`,levels=c("16","15","14","13","12","11","10","9","8","7","6","5","4","3","2","1"),oreder=T)
chinese<-factor(table$`國文`,levels=table$`國文`,oreder=T)
chinese<-factor(table$`國文`,levels=table$`國文`,oreder=T)
chinese<-factor(table$`國文`,levels=table$`國文`)
chinese
str(table$`國文`)
table$`國文`
chinese<-factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T)
chinese
as.interger(factor(table$`國文`))
as.integer(factor(table$`國文`))
chinese<-factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T)
chinese
table$`國文`
(factor(table$`國文`))->qq
levels(qq)
as.integr(levels(qq))
as.integer(levels(qq))
as.integer((factor(table$`國文`)))->qq
qq
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
levels(factor(table$`國文`)))
levels(factor(table$`國文`))
levels(as.integer(factor(table$`國文`)))
as.integer(factor(table$`國文`))
as.numeric(factor(table$`國文`))
as.integer(factor(table$`國文`))
as.integer(factor(table$`國文`,oreder=T))
as.integer(order(factor(table$`國文`,oreder=T)))
chinese<-factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T)
chinese<-factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T)
chinese
chinese<-factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T)
chinese
order(chinese)
order(chinese)->ok
class(ok)
chinese<-order(factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T))
chinese
class(chinese)
chinese<-order(factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T))
class(chinese)
chinese<-order(factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" )))
class(chinese)
chinese
chinese<-order(factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" )))
class(chinese)
chinese<-as.integer((factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T)))
chinese
class(chinese)
chinese<-as.integer((factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T)))
class(chinese)
chinese<-(factor(table$`國文`,levels=c("76.59 - 100.00","71.12 -  76.58","65.65 -  71.11","60.18 -  65.64","54.71 -  60.17","49.24 -  54.70" ,"43.77 -  49.23","38.30 -  43.76","32.83 -  38.29","27.36 -  32.82","21.89 -  27.35","16.42 -  21.88","10.95 -  16.41","5.48 -  10.94","0.01 -   5.47" , "0.00 -   0.00" ),order=T))
class(chinese)
chinese
chinese
chinese<-(factor(table$`國文`,order=T))
class(chinese)
chinese
chinese<-as.integer((factor(table$`國文`,order=T)))
class(chinese)
table$`國文`
chinese<-(factor(table$`國文`,order=T))
chinese<-order((factor(table$`國文`,order=T)))
class(chinese)
chinese
table$`國文`
table$`國文`
chinese<-factor(table$`國文`,order=T))
chinese<-factor(table$`國文`)
class(chinese)
chinese
order(table$`國文`)
levels(table$`國文`)
levels(chinese)
class(chinese)
chinese<-factor(table$`國文`,order=T)
levels(chinese)
class(chinese)
chinese
chi<-order(factor(table$`國文`,levels=table$`國文`,order=T))
chi<-order(factor(table$`國文`,levels=table$`國文`,order=T))
chi
factor(chi,order=T)
factor(chi,order=T)->chinese
levels(chinese)
class(chinese)
levels(chinese)
levels(chinese)
class(chinese)
factor(chi,order=T)->chinese
chi<-order(factor(table$`國文`,levels=table$`國文`,order=T))
chi
class(chi)
factor(chi,order=T)->chinese
levels(chinese)
class(chinese)
class(chi)
levels(chinese)
class(levels(chinese))
table$`國文`
chinese
table$`國文`
chi<-order(factor(table$`國文`,levels=table$`國文`,ordered=T))
chi<-order(factor(table$`國文`,levels=table$`國文`,ordered=T))
chi<-order(factor(table$`國文`,levels=table$`國文`,ordered=T))
class(chi)
factor(chi,order=T)->chinese
class(levels(chinese))
class(chinese)
chinese
table$`國文`
chinese
str(students10)
ntpuornot<-str_detect(students10$`志願`,"北大")
ntpuornot
ntpu_namelist
students10$`姓名`[ntpuornot]->ntpu_namelist
ntpu_namelist
class(chinese)
class(levels(chinese))
chinese
str(students10)
chiok<-students10$`國文`>=12
chiok
bothok<-(students10$`英文`+students10$`數學`)>=26
students10$`姓名`[ntpuornot][chiok][bothok]
students10$`姓名`[ntpuornot][chiok][bothok]
bothok<-(students10$`英文`+students10$`數學`)>=26
bothok<-(students10$`英文`+students10$`數學`)>=26
bothok
ntpuornot*chiok*bothok->great
students10$`姓名`[great]
students10$`姓名`[great]->ntpu_econtpu_eco
ntpu_econtpu_eco
str(students10)
ntpu<-str_detect(students10$`志願`,"北大經濟")
student<-students10$`姓名`[ntpu]
student<-students10$`姓名`[ntpu]
student<-students10$`姓名`[ntpu]
ntpu_econtpu_eco
students10$`姓名`[great]->ntpu_econtpu_eco
ntpu_econtpu_eco
ntpuornot*chiok->okk
okk*bothok->okkk
students10$`姓名`[okkk]->ntpu_econtpu_eco
ntpu_econtpu_eco
students10$`姓名`[ntpuornot][chiok][bothok]->ntpu_econtpu_eco
ntpu_econtpu_eco
chiok<-students10[ntpu_namelist]`國文`>=12
chiok<-students10[ntpu_namelist]$`國文`>=12
chiok<-students10[ntpu_namelist]$`國文`>=12
bothok<-(students10[ntpu_namelist]$`英文`+students10[ntpu_namelist]$`數學`)>=26
students10$`姓名`[ntpuornot][chiok][bothok]->ntpu_econtpu_eco
ntpu_econtpu_eco
students10$`姓名`[ntpuornot][chiok][bothok]->ntpu_econtpu_eco
ntpu_econtpu_eco
ntpu_econtpu_eco
students10$`姓名`[ntpuornot][chiok][bothok]->ntpu_econtpu_eco
bothok<-(students10[ntpu_namelist]$`英文`+students10[ntpu_namelist]$`數學`)>=26
chiok<-students10[ntpu_namelist]$`國文`>=12
ntpu_econtpu_eco
chiok<-students10[ntpuornot]$`國文`>=12
bothok<-(students10[ntpuornot]$`英文`+students10[ntpuornot]$`數學`)>=26
students10$`姓名`[ntpuornot][chiok][bothok]->ntpu_econtpu_eco
ntpu_econtpu_eco
chiok<-students10$`姓名`[ntpuornot]$`國文`>=12
chiok<-students10$`國文`[ntpuornot]>=12
bothok<-(students10$`英文`[ntpuornot]+students10$`數學`[ntpuornot])>=26
students10$`姓名`[ntpuornot][chiok][bothok]->ntpu_econtpu_eco
ntpu_econtpu_eco
ntpu<-str_detect(students10$`志願`,"北大經濟")
ntpu<-str_detect(students10$`志願`,"北大經濟")
student<-students10$`姓名`[ntpu]
str_detect(namelist,`student`)
str_detect(namelist,`student`)
`student`%in%`namelist`
`student`%in%`namelist`
`student`%in%`namelist`->con
student[con]
paste0(c("恭喜"),`realstudent`,"同學錄取國立臺北大學經濟系")
student[con]->realstudent
paste0(c("恭喜"),`realstudent`,"同學錄取國立臺北大學經濟系")
paste0(c("恭喜"),c(" "),`realstudent`,c(" "),"同學錄取國立臺北大學經濟系")
paste0(c("恭喜"),c(" "),`realstudent`,c(" "),"同學錄取國立臺北大學經濟系")->congrats
congrats
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
str(badEmployers$law)
violatedArticles<-levels(factor(badEmployers$law))
violatedArticles
str(badEmployers$law)
violatedArticles<-levels(factor(badEmployers$law))
violatedArticles
table_countsByArticle<-table(badEmployers$law)
names(table_countsByArticle)
table_countsByArticle
mostViolatedArticle<-table_countsByArticle[pickmax]
pickmax<-table_countsByArticle==max(table_countsByArticle)
pickmax
mostViolatedArticle<-table_countsByArticle[pickmax]
mostViolatedArticle
mostViolatedArticle
table(badEmployers$lawContent)->tablecontent
tablecontent==max(tablecontent)->maxcontent
tablecontent[maxcontent]->intermax
names(intermax)->mostViolatedArticle_content
mostViolatedArticle_content
mostViolatedArticle_content
date<-badEmployers$dt
datemonth<-month(date)
table (datemonth)->tablemonth
tablemonth
tablemonth==max(tablemonth)->max
tablemonth[max]->popular
names(popular)->popularSentenceMonth
popularSentenceMonth
popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
table$`國文`
chi<-order(factor(table$`國文`,levels=table$`國文`,ordered=T))
class(chi)
factor(chi,order=T)->chinese
class(levels(chinese))
class(chinese)
chinese
chinese
str(students10)
ntpuornot<-str_detect(students10$`志願`,"北大")
students10$`姓名`[ntpuornot]->ntpu_namelist
ntpu_namelist
ntpu_namelist
chiok<-students10$`國文`[ntpuornot]>=12
bothok<-(students10$`英文`[ntpuornot]+students10$`數學`[ntpuornot])>=26
students10$`姓名`[ntpuornot][chiok][bothok]->ntpu_econtpu_eco
ntpu_econtpu_eco
ntpu_econtpu_eco
str(students10)
ntpu<-str_detect(students10$`志願`,"北大經濟")
student<-students10$`姓名`[ntpu]
`student`%in%`namelist`->con
student[con]->realstudent
paste0(c("恭喜"),c(" "),`realstudent`,c(" "),"同學錄取國立臺北大學經濟系")->congrats
congrats
congrats
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
`ntpuornot`*`chiok`*`bothok`->logii
`ntpuornot`*`chiok`*`bothok`->logii
`ntpuornot`*`chiok`*`bothok`->logii
ntpuornot*chiok*bothok->logii
students10$`姓名`[`ntpuornot`*`chiok`*`bothok`]
students10$`姓名`[`ntpuornot`*`chiok`*`bothok`]
students10$`姓名`[ntpuornot*chiok*bothok]
students10$`姓名`[ntpuornot*chiok*bothok]
chiok<-students10$`國文`[ntpuornot]>=12
students10$`姓名`[ntpuornot*chiok*bothok]
students10$`姓名`[ntpuornot][chiok][bothok]->ntpu_econtpu_eco
ntpu_econtpu_eco
students10$`姓名`[ntpuornot*chiok*bothok]
ntpuornot<-str_detect(students10$`志願`,"北大")
ntpuornot
chiok<-students10$`國文`[ntpuornot]>=12
chiok
chiok<-students10$`國文`>=12
chiok
bothok<-(students10$`英文`+students10$`數學`)>=26
bothok
ntpuornot*chiok
ntpuornot*chiok*bothok
ntpuornot*chiok*bothok
ntpuornot*chiok*bothok->right
ntpuornot*chiok*bothok->right
students10$`姓名`[right]
students10$`姓名`[right]
students10$`姓名`[right]
ntpuornot*chiok*bothok->right
class(right)
as.logical(right)->realright
students10$`姓名`[realright]
ntpu_econtpu_eco
students10$`姓名`[realright]
students10$`姓名`[realright]->ntpu_econtpu_eco
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
str(badEmployers$law)
violatedArticles<-levels(factor(badEmployers$law))
violatedArticles
table_countsByArticle<-table(badEmployers$law)
names(table_countsByArticle)
table_countsByArticle
pickmax<-table_countsByArticle==max(table_countsByArticle)
pickmax
mostViolatedArticle<-table_countsByArticle[pickmax]
mostViolatedArticle
table(badEmployers$lawContent)->tablecontent
tablecontent==max(tablecontent)->maxcontent
tablecontent[maxcontent]->intermax
names(intermax)->mostViolatedArticle_content
mostViolatedArticle_content
date<-badEmployers$dt
datemonth<-month(date)
table (datemonth)->tablemonth
tablemonth
tablemonth==max(tablemonth)->max
tablemonth[max]->popular
names(popular)->popularSentenceMonth
popularSentenceMonth
popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
table$`國文`
chi<-order(factor(table$`國文`,levels=table$`國文`,ordered=T))
class(chi)
factor(chi,order=T)->chinese
class(levels(chinese))
class(chinese)
chinese
str(students10)
ntpuornot<-str_detect(students10$`志願`,"北大")
ntpuornot
students10$`姓名`[ntpuornot]->ntpu_namelist
ntpu_namelist
chiok<-students10$`國文`>=12
bothok<-(students10$`英文`+students10$`數學`)>=26
ntpuornot*chiok*bothok->right
as.logical(right)->realright
students10$`姓名`[realright]->ntpu_econtpu_eco
ntpu_econtpu_eco
str(students10)
ntpu<-str_detect(students10$`志願`,"北大經濟")
student<-students10$`姓名`[ntpu]
`student`%in%`namelist`->con
student[con]->realstudent
paste0(c("恭喜"),c(" "),`realstudent`,c(" "),"同學錄取國立臺北大學經濟系")->congrats
congrats
congrats
ntpu_econtpu_eco
ntpu_namelist
ntpu_econtpu_eco
ntpu_econtpu_eco
